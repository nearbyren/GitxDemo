// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'info_work_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

InfoWorkModel _$InfoWorkModelFromJson(Map<String, dynamic> json) =>
    InfoWorkModel(
      totalCount: json['totalCount'] as int? ?? 0,
      works: (json['works'] as List<dynamic>?)
              ?.map((e) => InfoModel.fromJson(e as Map<String, dynamic>))
              .toList() ??
          const [],
      title: json['title'] as String? ?? '',
      newsPics: json['newsPics'] as List<dynamic>? ?? const [],
      mcnRealName: json['mcnRealName'] as String? ?? '',
      nickName: json['nickName'] as String? ?? '',
      mcnIcon: json['mcnIcon'] as String? ?? '',
      uVContent: json['uVContent'] as String? ?? '',
      userId: json['userId'] as String? ?? '',
      url: json['url'] as String? ?? '',
      subType: json['subType'] as int? ?? 0,
      mcnId: json['mcnId'] as int? ?? 0,
      entityType: json['entityType'] as int? ?? 0,
      description: json['description'] as String? ?? '',
      createTime: json['createTime'] as String? ?? '',
      brandLogo: json['brandLogo'] as String? ?? '',
      categoryId: json['categoryId'] as int? ?? 0,
      channelId: json['channelId'] as int? ?? 0,
      commentCount: json['commentCount'] as int? ?? 0,
      commentCountStr: json['commentCountStr'] as String? ?? '',
      cover: json['cover'] as String? ?? '',
      creationTime: json['creationTime'] as String? ?? '',
      editorName: json['editorName'] as String? ?? '',
      entityId: json['entityId'] as int? ?? 0,
      followStatus: json['followStatus'] as int? ?? 0,
      isLike: json['isLike'] as bool? ?? false,
      isThumbs: json['isThumbs'] as bool? ?? false,
      keywords: json['keywords'] as List<dynamic>? ?? const [],
      mcnFansCount: json['mcnFansCount'] as String? ?? '',
      mcnPageView: json['mcnPageView'] as String? ?? '',
      mcnTemplateId: json['mcnTemplateId'] as int? ?? 0,
      newsContent: json['newsContent'] as String? ?? '',
      original: json['original'] as int? ?? 0,
      pageView: json['pageView'] as int? ?? 0,
      pageViewStr: json['pageViewStr'] as String? ?? '',
      shareCount: json['shareCount'] as int? ?? 0,
      shareCountStr: json['shareCountStr'] as String? ?? '',
      status: json['status'] as int? ?? 0,
      thumbsCounts: json['thumbsCounts'] as String? ?? '',
      userAvatar: json['userAvatar'] as String? ?? '',
      userName: json['userName'] as String? ?? '',
    );

Map<String, dynamic> _$InfoWorkModelToJson(InfoWorkModel instance) =>
    <String, dynamic>{
      'totalCount': instance.totalCount,
      'works': instance.works.map((e) => e.toJson()).toList(),
      'newsContent': instance.newsContent,
      'keywords': instance.keywords,
      'cover': instance.cover,
      'shareCount': instance.shareCount,
      'mcnIcon': instance.mcnIcon,
      'editorName': instance.editorName,
      'mcnTemplateId': instance.mcnTemplateId,
      'followStatus': instance.followStatus,
      'entityType': instance.entityType,
      'nickName': instance.nickName,
      'isThumbs': instance.isThumbs,
      'commentCount': instance.commentCount,
      'pageViewStr': instance.pageViewStr,
      'shareCountStr': instance.shareCountStr,
      'subType': instance.subType,
      'newsPics': instance.newsPics,
      'status': instance.status,
      'mcnRealName': instance.mcnRealName,
      'creationTime': instance.creationTime,
      'isLike': instance.isLike,
      'userAvatar': instance.userAvatar,
      'mcnPageView': instance.mcnPageView,
      'description': instance.description,
      'commentCountStr': instance.commentCountStr,
      'title': instance.title,
      'mcnFansCount': instance.mcnFansCount,
      'brandLogo': instance.brandLogo,
      'channelId': instance.channelId,
      'thumbsCounts': instance.thumbsCounts,
      'original': instance.original,
      'uVContent': instance.uVContent,
      'entityId': instance.entityId,
      'userName': instance.userName,
      'userId': instance.userId,
      'url': instance.url,
      'pageView': instance.pageView,
      'createTime': instance.createTime,
      'mcnId': instance.mcnId,
      'categoryId': instance.categoryId,
    };
